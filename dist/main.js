(()=>{"use strict";const t=class{constructor(t,e,s=null){this._title=t,this._text=e,this._tags=s||[],this._exists=!0}get title(){return this._title}set title(t){this._title=t}get text(){return this._text}set text(t){this._text=t}get tags(){return this._tags}set tags(t){this._tags=t}addTag(t){this._tags.push(t)}get exists(){return this._exists}set exists(t){this._exists=t}},e=class{constructor(t,e="red"){this._text=t,this._color=e}get text(){return this._text}set text(t){this._text=t}get color(){return this._color}set color(t){return this._color}};class s{constructor(t){this._name=t,this._title=t+"'s",this._todos=[]}get todos(){return this._todos}addTodo(t){this._todos.push(t)}get title(){return this._title}set title(t){this._title=t}}function o(t){const e=document.createElement("div");return e.classList.add("content"),e.innerHTML=`\n        <h1 class="todo-title">${t.title} Todos</h1>\n        <h2 class="todo-desc">\n            You've got <span class="todo-count">${t.todos.length}</span> todos to\n            complete\n        </h2>\n        <div class="add-new-task">\n            <input class="regular-checkbox" type="checkbox" name="add-task" value="del">\n            <input class="add-text-field" type="text" name="add-task-text" placeholder="Add a new task">\n        </div>\n    `,t.todos.forEach((t=>{e.innerHTML+=`\n            <div class="todo-card">\n                <input class="regular-checkbox" type="checkbox" name="add-task" value="del">\n                <div class="card-content">\n                    <h2>${t.title}</h2>\n                    <p>${t.text}</p>\n                    <div class="label-container">\n                    </div>\n                </div>\n            </div>\n        `;let s=e.querySelectorAll(".label-container"),o=s[s.length-1];t.tags.forEach((t=>{let e=document.createElement("div");e.classList.add("label"),e.classList.add(t.color),e.textContent=t.text,o.append(e)}))})),e}const n=new s("Today"),l=new s("Week");l.title="This Week's";let a=[new e("js","red"),new e("project","purple"),new e("todo","orange")],c=new t("Practice using JS module","Create a todo-list application to achieve this");c.tags=a,n.addTodo(c),a=[new e("css","green"),new e("html","yellow"),new e("study","blue")],c=new t("Practice CSS Flexbox","Use practice tools such as flexbox froggy"),c.tags=a,n.addTodo(c);let i=document.querySelector(".content");function d(t){let e=t;i.replaceWith(e),i=e}d(o(n));const r=document.querySelectorAll(".btn-group");r.forEach((t=>{t.addEventListener("click",(e=>{t.classList.contains("selected")||(t.classList.add("selected"),"group-today"==t.id?d(o(n)):"group-week"==t.id&&d(o(l)),r.forEach((e=>{t!==e&&e.classList.remove("selected")})))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,