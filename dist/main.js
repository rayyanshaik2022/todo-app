(()=>{"use strict";const t=class{constructor(t,e,s=null){this._title=t,this._text=e,this._tags=s||[],this._exists=!0}get title(){return this._title}set title(t){this._title=t}get text(){return this._text}set text(t){this._text=t}get tags(){return this._tags}set tags(t){this._tags=t}addTag(t){this._tags.push(t)}get exists(){return this._exists}set exists(t){this._exists=t}},e=class{constructor(t,e="red"){this._text=t,this._color=e}get text(){return this._text}set text(t){this._text=t}get color(){return this._color}set color(t){return this._color}};class s{constructor(t){this._name=t,this._title=t+"'s",this._todos=[]}get todos(){return this._todos}addTodo(t){this._todos.push(t)}get title(){return this._title}set title(t){this._title=t}}const o=new s("Today");new s("Week").title="This Week's";let n=[new e("js","red"),new e("project","purple"),new e("todo","orange")],l=new t("Practice using JS module","Create a todo-list application to achieve this");l.tags=n,o.addTodo(l),n=[new e("css","green"),new e("html","yellow"),new e("study","blue")],l=new t("Practice CSS Flexbox","Use practice tools such as flexbox froggy"),l.tags=n,o.addTodo(l),document.querySelector(".content").innerHTML+=function(t){const e=document.querySelector(".content");return e.innerHTML=`\n        <h1 class="todo-title">Today's Todos</h1>\n        <h2 class="todo-desc">\n            You've got <span class="todo-count">${t.todos.length}</span> todos to\n            complete\n        </h2>\n        <div class="add-new-task">\n            <input class="regular-checkbox" type="checkbox" name="add-task" value="del">\n            <input class="add-text-field" type="text" name="add-task-text" placeholder="Add a new task">\n        </div>\n    `,t.todos.forEach((t=>{e.innerHTML+=`\n            <div class="todo-card">\n                <input class="regular-checkbox" type="checkbox" name="add-task" value="del">\n                <div class="card-content">\n                    <h2>${t.title}</h2>\n                    <p>${t.text}</p>\n                    <div class="label-container">\n                    </div>\n                </div>\n            </div>\n        `;let s=document.querySelectorAll(".label-container"),o=s[s.length-1];console.log(o),t.tags.forEach((t=>{let e=document.createElement("div");e.classList.add("label"),e.classList.add(t.color),e.textContent=t.text,o.append(e),console.log("e")}))})),e}(o).innerHTML})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,